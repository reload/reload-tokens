<?php 

/**
 * Implementation of hook_token_values()
 * 
 * @param string $type
 * @param object $object
 * @param array $options
 *
 * @return array
 */
function reload_tokens_token_values($type, $object = NULL, $options = array()){
	if($type=='node'){
		
    $mlid = db_result(db_query("SELECT mlid FROM {menu_links} WHERE link_path = '%s'", 'node/'. $object->nid));
		
    if (!empty($mlid) || !empty($node->menu['mlid']) || !empty($node->menu['plid'])) {
      $menu_link = menu_link_load($mlid);
      $menus = menu_get_menus();
      $menu = isset($menus[$menu_link['menu_name']]) ? $menus[$menu_link['menu_name']] : '';
      $path = _menu_titles($menu_link, $node->nid);
    }
    
    // The actual fallback feature 
		if(!$path){
		  $path = array($object->title);
		}
    $tokens['menupath-with-fallback-to-title-path'] = $path;
    return $tokens;	
	}
}

/**
 * Implementation of hook_token_list()
 * 
 * @param string $type
 * 
 * *return array
 */
function reload_tokens_token_list($type = 'all'){
 $tokens = array();
  if ($type == 'node') {
    $tokens['node']['menupath-with-fallback-to-title-path'] = t('Use title if no menupath is present');
  }
	return $tokens;
}